{"ast":null,"code":"import _toConsumableArray from\"/Users/icearik/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/icearik/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/icearik/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import Header from'./components/Header';import Tasks from'./components/Tasks';import AddTask from'./components/AddTask';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([{id:1,text:'CSE 485',day:'Apr 3rd at 1:15pm',reminder:true},{id:2,text:'CSE 465',day:'Apr 4th at 2:50pm',reminder:false},{id:3,text:'Dinner with friends',day:'Apr 4th at 7:00pm',reminder:true}]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];// Add Tasks\nvar addTask=function addTask(task){var id=Math.floor(Math.random()*1000)+1;var newTask=_objectSpread({id:id},task);setTasks([].concat(_toConsumableArray(tasks),[newTask]));};// Delete tasks\nvar deleteTask=function deleteTask(id){setTasks(tasks.filter(function(task){return task.id!==id;}));};// Toggle Reminder\nvar toggleReminder=function toggleReminder(id){setTasks(tasks.map(function(task){return task.id===id?_objectSpread(_objectSpread({},task),{},{reminder:!task.reminder}):task;}));};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onDelete:deleteTask,onToggle:toggleReminder}):\"No Tasks To Show\"]});}export default App;","map":{"version":3,"sources":["/Users/icearik/Desktop/my-app/src/App.js"],"names":["useState","Header","Tasks","AddTask","App","showAddTask","setShowAddTask","id","text","day","reminder","tasks","setTasks","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","length"],"mappings":"gWAAA,OAAQA,QAAR,KAAuB,OAAvB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CACA,MAAOC,CAAAA,KAAP,KAAkB,oBAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,sBAApB,C,wFAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAAsCJ,QAAQ,CAAC,KAAD,CAA9C,wCAAOK,WAAP,eAAoBC,cAApB,eACA,eAA0BN,QAAQ,CAChC,CACI,CACGO,EAAE,CAAC,CADN,CAEGC,IAAI,CAAE,SAFT,CAGGC,GAAG,CAAE,mBAHR,CAIGC,QAAQ,CAAE,IAJb,CADJ,CAOI,CACIH,EAAE,CAAC,CADP,CAEIC,IAAI,CAAE,SAFV,CAGIC,GAAG,CAAE,mBAHT,CAIIC,QAAQ,CAAE,KAJd,CAPJ,CAaI,CACIH,EAAE,CAAC,CADP,CAEIC,IAAI,CAAE,qBAFV,CAGIC,GAAG,CAAE,mBAHT,CAIIC,QAAQ,CAAE,IAJd,CAbJ,CADgC,CAAlC,yCAAOC,KAAP,eAAcC,QAAd,eAsBF;AACA,GAAMC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,IAAD,CAAU,CACxB,GAAMP,CAAAA,EAAE,CAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,IAA3B,EAAmC,CAA9C,CACA,GAAMC,CAAAA,OAAO,gBAAIX,EAAE,CAAFA,EAAJ,EAAWO,IAAX,CAAb,CACAF,QAAQ,8BAAKD,KAAL,GAAYO,OAAZ,GAAR,CACD,CAJD,CAMA;AACA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,CAACZ,EAAD,CAAQ,CACzBK,QAAQ,CAACD,KAAK,CAACS,MAAN,CAAa,SAACN,IAAD,QAAUA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAtB,EAAb,CAAD,CAAR,CACD,CAFD,CAIA;AACA,GAAMc,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACd,EAAD,CAAQ,CAC7BK,QAAQ,CACND,KAAK,CAACW,GAAN,CAAU,SAACR,IAAD,QACVA,CAAAA,IAAI,CAACP,EAAL,GAAYA,EAAZ,gCAAqBO,IAArB,MACEJ,QAAQ,CAAC,CAACI,IAAI,CAACJ,QADjB,GAC6BI,IAFnB,EAAV,CADM,CAAR,CAID,CALD,CAOE,mBACE,aAAK,SAAS,CAAC,WAAf,wBACE,KAAC,MAAD,EAAQ,KAAK,CAAG,uBAAMR,CAAAA,cAAc,CAAC,CAACD,WAAF,CAApB,EAAhB,CACC,OAAO,CAAEA,WADV,EADF,CAGGA,WAAW,eAAI,KAAC,OAAD,EAAS,KAAK,CAAIQ,OAAlB,EAHlB,CAIGF,KAAK,CAACY,MAAN,CAAe,CAAf,cACC,KAAC,KAAD,EAAO,KAAK,CAAEZ,KAAd,CACA,QAAQ,CAAEQ,UADV,CAEA,QAAQ,CAAEE,cAFV,EADD,CAKC,kBATJ,GADF,CAcD,CAGD,cAAejB,CAAAA,GAAf","sourcesContent":["import {useState} from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState(\n    [\n        {\n           id:1,\n           text: 'CSE 485',\n           day: 'Apr 3rd at 1:15pm',\n           reminder: true, \n        },\n        {\n            id:2,\n            text: 'CSE 465',\n            day: 'Apr 4th at 2:50pm',\n            reminder: false, \n        },\n        {\n            id:3,\n            text: 'Dinner with friends',\n            day: 'Apr 4th at 7:00pm',\n            reminder: true, \n        }\n    ]\n)\n// Add Tasks\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 1000) + 1\n  const newTask = {id, ...task}\n  setTasks([...tasks, newTask])\n}\n\n// Delete tasks\nconst deleteTask = (id) => {\n  setTasks(tasks.filter((task) => task.id !== id))\n}\n\n// Toggle Reminder\nconst toggleReminder = (id) => {\n  setTasks(\n    tasks.map((task) => \n    task.id === id ? {...task, \n      reminder:!task.reminder} : task))\n}\n\n  return (\n    <div className=\"container\">\n      <Header onAdd ={() => setShowAddTask(!showAddTask)} \n       showAdd={showAddTask}/>\n      {showAddTask && <AddTask onAdd = {addTask}/>}\n      {tasks.length > 0? (\n        <Tasks tasks={tasks} \n        onDelete={deleteTask}\n        onToggle={toggleReminder}/>\n      ) : (\n        \"No Tasks To Show\"\n      )}\n    </div>\n  );\n}\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}